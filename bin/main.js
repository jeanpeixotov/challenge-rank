"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const bodyParser = require("body-parser");
const express = require("express");
const db = require("./db");
const allowCors_1 = require("./middlewares/allowCors");
const errors_1 = require("./middlewares/errors");
const errors = require("./middlewares/errors");
const routes_1 = require("./routes");
const settings = require("./settings");
db.connect();
const publicDir = __dirname + '/../dist';
const app = express();
app.use(express.static(publicDir));
app.use(bodyParser.urlencoded({ extended: true }));
app.use(allowCors_1.allowCors);
app.use('/api', routes_1.router);
app.get('/views/*', errors_1.notFound);
app.get('*', (req, res) => res.sendFile('index.html', { root: publicDir }));
app.use(errors.notFound);
app.use(errors.parser);
app.listen(settings.port, () => console.log(`server started: PORT: ${settings.port} | ENV: ${settings.env}`));
process.on('unhandledRejection', (reason, p) => { });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NlcnZlci9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsdUNBQXFDO0FBRXJDLDBDQUEwQztBQUMxQyxtQ0FBbUM7QUFFbkMsMkJBQTJCO0FBQzNCLHVEQUFvRDtBQUNwRCxpREFBZ0Q7QUFDaEQsK0NBQStDO0FBQy9DLHFDQUErQztBQUMvQyx1Q0FBdUM7QUFFdkMsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBRWIsTUFBTSxTQUFTLEdBQUcsU0FBUyxHQUFHLFVBQVUsQ0FBQztBQUN6QyxNQUFNLEdBQUcsR0FBRyxPQUFPLEVBQUUsQ0FBQztBQUV0QixHQUFHLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztBQUVuQyxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ25ELEdBQUcsQ0FBQyxHQUFHLENBQUMscUJBQVMsQ0FBQyxDQUFDO0FBRW5CLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLGVBQVMsQ0FBQyxDQUFDO0FBQzNCLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLGlCQUFRLENBQUMsQ0FBQztBQUM5QixHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsWUFBWSxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUU1RSxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUN6QixHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUV2QixHQUFHLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsUUFBUSxDQUFDLElBQUksV0FBVyxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzlHLE9BQU8sQ0FBQyxFQUFFLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxNQUFXLEVBQUUsQ0FBTSxFQUFFLEVBQUUsR0FBZ0IsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3NvdXJjZS1tYXAtc3VwcG9ydC9yZWdpc3Rlcic7XG5cbmltcG9ydCAqIGFzIGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0ICogYXMgZXhwcmVzcyBmcm9tICdleHByZXNzJztcblxuaW1wb3J0ICogYXMgZGIgZnJvbSAnLi9kYic7XG5pbXBvcnQgeyBhbGxvd0NvcnMgfSBmcm9tICcuL21pZGRsZXdhcmVzL2FsbG93Q29ycyc7XG5pbXBvcnQgeyBub3RGb3VuZCB9IGZyb20gJy4vbWlkZGxld2FyZXMvZXJyb3JzJztcbmltcG9ydCAqIGFzIGVycm9ycyBmcm9tICcuL21pZGRsZXdhcmVzL2Vycm9ycyc7XG5pbXBvcnQgeyByb3V0ZXIgYXMgYXBpUm91dGVzIH0gZnJvbSAnLi9yb3V0ZXMnO1xuaW1wb3J0ICogYXMgc2V0dGluZ3MgZnJvbSAnLi9zZXR0aW5ncyc7XG5cbmRiLmNvbm5lY3QoKTtcblxuY29uc3QgcHVibGljRGlyID0gX19kaXJuYW1lICsgJy8uLi9kaXN0JztcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShleHByZXNzLnN0YXRpYyhwdWJsaWNEaXIpKTtcblxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5hcHAudXNlKGFsbG93Q29ycyk7XG5cbmFwcC51c2UoJy9hcGknLCBhcGlSb3V0ZXMpO1xuYXBwLmdldCgnL3ZpZXdzLyonLCBub3RGb3VuZCk7XG5hcHAuZ2V0KCcqJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZEZpbGUoJ2luZGV4Lmh0bWwnLCB7IHJvb3Q6IHB1YmxpY0RpciB9KSk7XG5cbmFwcC51c2UoZXJyb3JzLm5vdEZvdW5kKTtcbmFwcC51c2UoZXJyb3JzLnBhcnNlcik7XG5cbmFwcC5saXN0ZW4oc2V0dGluZ3MucG9ydCwgKCkgPT4gY29uc29sZS5sb2coYHNlcnZlciBzdGFydGVkOiBQT1JUOiAke3NldHRpbmdzLnBvcnR9IHwgRU5WOiAke3NldHRpbmdzLmVudn1gKSk7XG5wcm9jZXNzLm9uKCd1bmhhbmRsZWRSZWplY3Rpb24nLCAocmVhc29uOiBhbnksIHA6IGFueSkgPT4geyAvKiBpZ25vcmUgKi8gfSk7Il19